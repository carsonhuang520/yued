{"version":3,"sources":["row.test.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"row.test.js","sourceRoot":"..\\test","sourcesContent":["// const expect = chai.expect\r\n// import Vue from 'vue'\r\n// import Row from '../src/row'\r\n// import Col from '../src/col'\r\n\r\n// Vue.config.productionTip = false\r\n// Vue.config.devtools = false\r\n\r\n// // describe it 是来自于 mocha 的库\r\n// // 断言是来自 chai 库\r\n// describe('Row', () => {\r\n//   // BDD 行为驱动测试 mocha引入 describe 描述 Button 有哪些行为\r\n//   it('存在.', () => {\r\n//     expect(Row).to.exist\r\n//   })\r\n//   // 加 done 参数是为了执行异步代码，否则会认为所有代码都是同步的\r\n//   it('接收 gutter 属性', (done) => {\r\n//     Vue.component('y-row', Row)\r\n//     Vue.component('y-col', Col)\r\n//     const div = document.createElement('div')\r\n//     document.body.appendChild(div)\r\n//     div.innerHTML = `\r\n//       <y-row gutter=\"20\">\r\n//         <y-col span=\"12\"></y-col>\r\n//         <y-col span=\"12\"></y-col>\r\n//       </y-row>\r\n//     `\r\n//     const vm = new Vue({\r\n//       el: div,\r\n//     })\r\n//     setTimeout(() => {\r\n//       const row = vm.$el.querySelector('.y-row')\r\n//       expect(getComputedStyle(row).marginLeft).to.eq('-10px')\r\n//       expect(getComputedStyle(row).marginRight).to.eq('-10px')\r\n//       const col0 = vm.$el.querySelectorAll('.y-col')[0]\r\n//       const col1 = vm.$el.querySelectorAll('.y-col')[1]\r\n//       expect(getComputedStyle(col0).paddingLeft).to.eq('10px')\r\n//       expect(getComputedStyle(col1).paddingRight).to.eq('10px')\r\n//       done()\r\n//       div.remove()\r\n//       vm.$destroy()\r\n//     }, 1000)\r\n//   })\r\n//   it('接收 align 属性', () => {\r\n//     const div = document.createElement('div')\r\n//     document.body.appendChild(div)\r\n//     const Constructor = Vue.extend(Row)\r\n//     const vm = new Constructor({\r\n//       propsData: {\r\n//         align: 'center',\r\n//       },\r\n//     }).$mount(div)\r\n//     const element = vm.$el\r\n//     expect(getComputedStyle(element).justifyContent).to.eq('center')\r\n//     div.remove()\r\n//     vm.$destroy()\r\n//   })\r\n// })\r\n"]}