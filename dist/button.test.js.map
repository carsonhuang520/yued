{"version":3,"sources":["button.test.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"button.test.js","sourceRoot":"..\\test","sourcesContent":["// const expect = chai.expect\r\n// import Vue from 'vue'\r\n// import Button from '../src/button'\r\n\r\n// Vue.config.productionTip = false\r\n// Vue.config.devtools = false\r\n\r\n// // describe it 是来自于 mocha 的库\r\n// // 断言是来自 chai 库\r\n// describe('Button', () => {\r\n//   // BDD 行为驱动测试 mocha引入 describe 描述 Button 有哪些行为\r\n//   it('存在.', () => {\r\n//     expect(Button).to.be.ok\r\n//     expect([1, 2]).to.deep.equal([1, 2]) // 数组判断需要加 deep\r\n//   })\r\n//   it('可以设置icon.', () => {\r\n//     const Constructor = Vue.extend(Button)\r\n//     const vm = new Constructor({\r\n//       propsData: {\r\n//         icon: 'settings',\r\n//       },\r\n//     }).$mount()\r\n//     const useElement = vm.$el.querySelector('use')\r\n//     expect(useElement.getAttribute('xlink:href')).to.equal('#i-settings')\r\n//     vm.$destroy()\r\n//   })\r\n//   it('可以设置loading', () => {\r\n//     const Constructor = Vue.extend(Button)\r\n//     const vm = new Constructor({\r\n//       propsData: {\r\n//         icon: 'settings',\r\n//         loading: true,\r\n//       },\r\n//     }).$mount()\r\n//     let useElement = vm.$el.querySelector('use')\r\n//     let href = useElement.getAttribute('xlink:href')\r\n//     expect(href).to.eq('#i-loading')\r\n//     vm.$destroy()\r\n//   })\r\n//   it('icon 默认的 order 是 1', () => {\r\n//     const div = document.createElement('div')\r\n//     document.body.appendChild(div)\r\n//     const Constructor = Vue.extend(Button)\r\n//     const vm = new Constructor({\r\n//       propsData: {\r\n//         icon: 'settings',\r\n//       },\r\n//     }).$mount(div)\r\n//     let svg = vm.$el.querySelector('svg')\r\n//     let { order } = window.getComputedStyle(svg)\r\n//     // console.log(useElement);\r\n//     expect(order).to.eq('1')\r\n//     vm.$el.remove()\r\n//     vm.$destroy()\r\n//   })\r\n//   it('设置 iconPosition 可以改变 order', () => {\r\n//     const div = document.createElement('div')\r\n//     document.body.appendChild(div)\r\n//     const Constructor = Vue.extend(Button)\r\n//     const vm = new Constructor({\r\n//       propsData: {\r\n//         icon: 'settings',\r\n//         iconPosition: 'right',\r\n//       },\r\n//     }).$mount(div)\r\n//     let svg = vm.$el.querySelector('svg')\r\n//     let { order } = window.getComputedStyle(svg)\r\n//     expect(order).to.eq('2')\r\n//     vm.$el.remove()\r\n//     vm.$destroy()\r\n//   })\r\n//   it('点击 button 触发 click 事件', () => {\r\n//     const Constructor = Vue.extend(Button)\r\n//     const vm = new Constructor({\r\n//       propsData: {\r\n//         icon: 'settings',\r\n//       },\r\n//     }).$mount()\r\n//     const callback = sinon.fake() // 相当于之前的 spy\r\n//     vm.$on('click', callback)\r\n//     vm.$el.click()\r\n//     expect(callback).to.have.been.called\r\n//   })\r\n// })\r\n"]}